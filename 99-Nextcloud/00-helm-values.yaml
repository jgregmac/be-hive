# Use nginx instead of apache. works around hugepage problem???
image:
  flavor: fpm
nginx:
  enabled: true

# Database configuration:
internalDatabase:
  enabled: false
externalDatabase:
  enabled: true
  host: my-postgresql.nextcloud.svc.cluster.local
  type: postgresql
  password: "FIRST_PASSWORD"
postgresql:
  enabled: true
  global:
    # defaultStorageClass is ignored for primary replica persistent disk. Worthless!
    # defaultStorageClass: longhorn-ssd-double
    postgresql: # <- TODO: Verify the key.  This looks incorrect.
      auth:
        password: "FIRST_PASSWORD"
        secretKeys:
          adminPasswordKey:
          userPasswordKey:
      primary.persistence.enabled: true
  primary:
    persistence:
      enabled: true
      size: 16Gi
      storageClass: longhorn-ssd-double

# Storage:
persistence:
  enabled: true
  storageClass: longhorn-ssd-double
  size: 512Gi

# Nextcloud configuration:
nextcloud:
  host: nextcloud.be-hive.cloud
  # Uncomment if using Apache with Hugepages enabled on the K8s nodes.  We are using nginx!
  # extraVolumes:
  #   - name: hugepages
  #     emptyDir:
  #       medium: HugePages-2Mi
  # extraVolumeMounts:
  #   - name: hugepages
  #     mountPath: /dev/hugepages
  # password: "SECOND_PASSWORD"
  existingSecret:
    enabled: true
    secretName:
    usernameKey:
    passwordKey:
  configs:
    # Change logging behavior. By default, logging is disabled.
    # Note: loglevels: 0=DEBUG, 1=INFO, 2=WARN, 3=ERROR, 4=FATAL
    logging.config.php: |-
      <?php
      $CONFIG = array (
        'log_type' => 'file',
        'logfile' => '/dev/stdout',
        'loglevel' => 1,
        'logdateformat' => 'F d, Y H:i:s'
        );
    # Adds X-Forwareded-For header to incomming HTTP messages:
    proxy.config.php: |-
      <?php
      $CONFIG = array (
        'trusted_proxies' => array(
          0 => '127.0.0.1',
          1 => '10.0.0.0/8',
        ),
        'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
      );
# resources:
#   requests:
#     hugepages-2Mi: 500Mi
#     # note that Kubernetes currently requires cpu or memory requests and limits before hugepages are allowed.
#     memory: 500Mi
#   limits:
#     # limit and request must be the same for hugepages. They are a fixed resource.
#     hugepages-2Mi: 500Mi
#     # note that Kubernetes currently requires cpu or memory requests and limits before hugepages are allowed.
#     memory: 1Gi

# Redis is not enabled by default.  Do we want it?
redis:
  enabled: false

ingress:
  enabled: true
  className: public
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_tokens off;
      proxy_hide_header X-Powered-By;
      rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
      rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
      rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
      rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
      location = /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /.well-known/caldav {
        return 301 $scheme://$host/remote.php/dav;
      }
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
      location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
        deny all;
      }
      location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
        deny all;
      }
  tls:
  - hosts:
    - nextcloud.be-hive.cloud
    secretName: be-hive-cloud-tls